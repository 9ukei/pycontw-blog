[project]
name = "pycontw-blog"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "markdown-del-ins>=1.0.0",
    "pelican-seo>=1.3.0",
    "pelican[markdown]>=4.11.0",
]

[dependency-groups]
dev = [
    "pre-commit-hooks>=5.0.0",
    "pre-commit>=4.1.0",
    "ruff>=0.9.3",
    "livereload>=2.7.1",
    "invoke>=2.2.0",
    "commitizen>=4.1.1",
    "questionary>=2.1.0",
    "pip-audit>=2.7.3",
]

[tool.commitizen]
name = "cz_customize"

[tool.commitizen.customize]
message_template = "{{change_type}}: {{message}}"
example = "new post: this is my first post"
schema = "<type>: <body>"
schema_pattern = "^(new post|post update|new draft|draft update|post metadata|fix typo|theme|static page|config|dependency|github-actions):"
info = "git commit convention for PyCon Taiwan blog"

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
choices = [
    "new post",
    "post update",
    "new draft",
    "draft update",
    "post metadata",
    "fix typo",
    "theme",
    "static page",
    "config",
    "dependency",
    "github-actions",
]
message = "What type of commit is it?"

[[tool.commitizen.customize.questions]]
type = "input"
name = "message"
message = "Message body: \n"


[tool.ruff]
line-length = 88

[tool.ruff.lint]
ignore = ["E501", "D1", "D415"]
extend-select = [
    # Enable entire ruff rule section
    "I",     # Missing required import (auto-fixable)
    "UP",    # Pyupgrade
    "TCH",   # Rules around TYPE_CHECKING blocks
    "FA100",
    "G",     # flake8-logging-format rules
    "LOG",   # flake8-logging rules, most of them autofixable
    "PT",    # flake8-pytest-style rules
    "TID25", # flake8-tidy-imports rules
    "E",     # pycodestyle rules
    "W",     # pycodestyle rules
]

[tool.ruff.lint.isort]
combine-as-imports = true
